import RPi.GPIO as GPIO
import sys, tty, termios, signal

inputs = [5,6,16,19,20,26]

def interrupted(signum,frame):
  for x in inputs:
    GPIO.output(x,GPIO.LOW)

old_settings = termios.tcgetattr(sys.stdin.fileno()) #records current terminal settings
signal.signal(signal.SIGALRM, interrupted) #calls interrupted when alarm stops
tty.setraw(sys.stdin.fileno()) #raw keystroke input, changes terminal settings

GPIO.setmode(GPIO.BCM)
GPIO.setup(5,GPIO.OUT)
GPIO.setup(6,GPIO.OUT
GPIO.setup(16,GPIO.OUT)
GPIO.setup(18,GPIO.OUT)
GPIO.setup(19,GPIO.OUT)
GPIO.setup(20,GPIO.OUT)
GPIO.setup(25,GPIO.OUT)
GPIO.setup(26,GPIO.OUT)
GPIO.output(5,GPIO.LOW)
GPIO.output(6,GPIO.LOW)
GPIO.output(16,GPIO.LOW)
GPIO.output(19,GPIO.LOW)
GPIO.output(20,GPIO.LOW)
GPIO.output(26,GPIO.LOW)
p=GPIO.PWM(18,1000)
q=GPIO.PWM(25,1000)

p.start(100)
q.start(100)
print("\n")
print("q-quit 1-up 2-down")
print("\n")

while True:
  
  signal.setitimer(signal.ITIMER_REAL,0.155) #starts alarm for 0.155 sec
  ch = sys.stdin.read(1) #saves one keystroke as variable
  signal.setitimer(signal.ITIMER_REAL,0) #resets alarm and ch variable
  
  if ch == 'q': #press q to quit
    GPIO.cleanup()
    termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, old_settings) #Changes the terminal settings back to what they were before
    break
    
  elif ch == '1': #press 1 to go up
    GPIO.output(16,GPIO.HIGH)
    
  elif ch == '2': #press 2 to go down
    GPIO.output(20,GPIO.HIGH)
    
  elif ch == '3': #press 3 to go down
    GPIO.output(5,GPIO.HIGH)
    
  elif ch == '4': #press 4 to go down
    GPIO.output(6,GPIO.HIGH)
    
  elif ch == '5': #press 5 to go left
    GPIO.output(19,GPIO.HIGH)
    
  elif ch == '6': #press 6 to go down
    GPIO.output(26,GPIO.HIGH)
